apply plugin: 'com.android.application'

Properties props = new Properties()
if (project.hasProperty("dudu.properties")
        && new File(project.property("dudu.properties")).exists()) {
    props.load(new FileInputStream(file(project.property("dudu.properties"))))
}

android {
    signingConfigs {
        release {
            keyAlias props['syskey.alias']
            keyPassword props['syskey.password']
            storeFile file(props['syskeystore'])
            storePassword props['syskeystore.password']
        }
        debug {
            keyAlias props['syskey.alias']
            keyPassword props['syskey.password']
            storeFile file(props['syskeystore'])
            storePassword props['syskeystore.password']
        }
    }

    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId "com.dudu.upgrade"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    productFlavors {
        d02 {
        }
        b04 {
        }
        z3 {
        }
        productFlavors.all { flavor ->
            apply from: "../../commonlib/version/app/version_${flavor.name}.gradle"
            flavor.versionCode = appVersionCode
            flavor.versionName = appVersionName
        }
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }

    getApplicationVariants().all { variant ->
        variant.outputs.each { output ->
            def date = new Date()
            def formattedDate = date.format('yyyyMMdd')
            output.outputFile = new File(output.outputFile.parent,
                    "Upgrade_${variant.flavorName}_${formattedDate}.apk")
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':commonlib:common')
    compile 'com.android.support:appcompat-v7:25.2.0'
}
